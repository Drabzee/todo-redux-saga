{"version":3,"sources":["constants/index.js","components/Home.jsx","selectors/index.js","components/Loader.jsx","actions/index.js","components/SelectUser.jsx","components/TodoList.jsx","components/Todos.jsx","components/Navbar.jsx","components/Todo.jsx","components/Users.jsx","App.js","reportWebVitals.js","router/index.js","reducers/pageReducer.js","reducers/todosReducer.js","reducers/usersReducer.js","reducers/index.js","api/index.js","sagas/watchTodos.js","sagas/watchUsers.js","sagas/index.js","store/index.js","index.js"],"names":["ROUTES","TODOS","USERS","Home","className","to","type","getIsLoading","createSelector","state","todos","isLoading","users","todosIsLoading","usersIsLoading","Loader","todosSuccess","todosUpdateReq","id","data","todosUpdateRes","todo","usersSuccess","connect","dispatch","changeCurrentUser","currentUser","onChange","e","target","value","defaultValue","allIds","map","byId","name","_","props","isChecked","getSelectedTodos","filter","userId","parseInt","completed","title","handleCheckbox","event","a","window","confirm","checked","length","style","flex","textDecoration","color","payload","Navbar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","exact","activeClassName","aria-current","React","memo","location","user","useState","isUpdated","todoFormData","setTodoFormData","useEffect","handleFormData","onSubmit","preventDefault","htmlFor","username","email","address","street","suite","city","zipcode","page","Component","Todos","Todo","Users","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mapRoutes","console","log","process","connectRoutes","basename","componenents","pageReducer","action","initialState","error","todosReducer","usersReducer","connectedRoutes","reducer","combineReducers","fetchTodos","axios","get","res","dataArray","push","fetchUsers","updateTodo","patch","handleTodos","handleTodoUpdateReq","handleTodoUpdateRes","watchTodos","call","put","toString","takeEvery","rootSaga","all","watchUsers","middleware","enhancer","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d958ad1c.chunk.js","sourcesContent":["export const ROUTES = {\n  HOME: 'HOME',\n  TODOS: 'TODOS',\n  TODO: 'TODO',\n  USERS: 'USERS'\n};\n\nexport const TODOS = {\n  LOAD: 'TODOS_LOAD',\n  SUCCESS: 'TODOS_SUCCESS',\n  FAIL: 'TODOS_FAIL',\n  UPDATE_REQ: 'TODOS_UPDATE_REQ',\n  UPDATE_RES: 'TODOS_UPDATE_RES'\n};\n\nexport const USERS = {\n  LOAD: 'USERS_LOAD',\n  SUCCESS: 'USERS_SUCCESS',\n  FAIL: 'USERS_FAIL',\n  CHANGE_CURRENT_USER: 'CHANGE_CURRENT_USER'\n};","import { ROUTES } from \"../constants\";\nimport { NavLink } from \"redux-first-router-link\";\n\nconst Home = () => {\n  return (\n    <section className=\"container\">\n      <h1>Home</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Todos</h5>\n              <p className=\"card-text\">\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industry's standard dummy\n                text ever since the 1500s\n              </p>\n              <NavLink to={{ type: ROUTES.TODOS }} className=\"btn btn-primary\">\n                List Todos\n              </NavLink>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 mt-2 mt-md-0\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Users</h5>\n              <p className=\"card-text\">\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industry's standard dummy\n                text ever since the 1500s\n              </p>\n              <NavLink to={{ type: ROUTES.USERS }} className=\"btn btn-primary\">\n                List Users\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { createSelector } from \"reselect\";\n\nexport const getIsLoading = createSelector(\n  state => state.todos.isLoading,\n  state => state.users.isLoading,\n  (todosIsLoading, usersIsLoading) => todosIsLoading || usersIsLoading\n);\n\nexport const makeGetSelectedTodos = isChecked => createSelector(\n  state => state.todos.data,\n  state => state.users.currentUser,\n  (todos, currentUser) => {\n    const selectedTodoIds = todos.allIds.filter(\n      (id) => todos.byId[id].userId === parseInt(currentUser) &&\n                todos.byId[id].completed === isChecked\n    );\n\n    return selectedTodoIds.map(id => todos.byId[id]);\n  }\n);","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader-bg\">\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { TODOS, USERS } from '../constants';\n\nexport const todosLoad = () => ({\n  type: TODOS.LOAD\n});\n\nexport const todosSuccess = (todos) => ({\n  type: TODOS.SUCCESS,\n  todos\n});\n\nexport const todosFail = (error) => ({\n  type: TODOS.FAIL,\n  error\n});\n\nexport const todosUpdateReq = (id, data) => ({\n  type: TODOS.UPDATE_REQ,\n  id, data\n});\n\nexport const todosUpdateRes = (todo) => ({\n  type: TODOS.UPDATE_RES,\n  todo\n});\n\nexport const usersLoad = () => ({\n  type: USERS.LOAD\n});\n\nexport const usersSuccess = (users) => ({\n  type: USERS.SUCCESS,\n  users\n});\n\nexport const usersFail = (error) => ({\n  type: USERS.FAIL,\n  error\n});\n\nexport const changeCurrentUser = (id) => ({\n  type: USERS.CHANGE_CURRENT_USER,\n  id\n});","import { connect } from 'react-redux';\nimport { changeCurrentUser } from '../actions';\n\nconst SelectUser = ({changeCurrentUser, users}) => {\n\n  const handleUserSelect = (e) => {\n    changeCurrentUser(e.target.value);\n  };\n\n  return (users.currentUser !== null)\n    ? (\n      <div className=\"user-select col-md-4 my-5 mx-auto\">\n        <h3 className=\"text-center\">Select User</h3>\n        <select\n          onChange={handleUserSelect}\n          defaultValue={users.currentUser}\n          className=\"form-select mt-3\"\n        >\n          <option key={0} value={0}>\n            Select\n          </option>\n          {users.data.allIds.map((id) => (\n            <option key={id} value={id}>\n              {users.data.byId[id].name}\n            </option>\n          ))}\n        </select>\n      </div>\n    )\n    : null;\n}\n\nconst mapStateToProps = ({ users }) => ({ users });\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeCurrentUser: (id) => dispatch(changeCurrentUser(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectUser)\n","import { connect } from \"react-redux\";\nimport Link from \"redux-first-router-link\";\nimport { todosUpdateReq } from \"../actions\";\nimport { ROUTES } from \"../constants\";\nimport { makeGetSelectedTodos } from \"../selectors\";\n\nconst TodoList = ({ title, todos, todosUpdateReq }) => {\n\n  const handleCheckbox = async (event, title) => {\n    if (window.confirm(\"Are you sure to change status of this todo?\")) {\n      todosUpdateReq(event.target.value, {\n        title,\n        completed: event.target.checked,\n      });\n    }\n  };\n\n  return todos.length > 0 ? (\n    <div className=\"todo-list\">\n      <h3 className=\"ms-2\">{title}</h3>\n      <ul className=\"list-group mt-3\">\n        {todos.map((todo) => (\n          <li key={todo.id} className=\"list-group-item d-flex flex-row\">\n            <input\n              onChange={(event) => handleCheckbox(event, todo.title)}\n              className=\"form-check-input me-3\"\n              type=\"checkbox\"\n              value={todo.id}\n              checked={todo.completed}\n            />\n            <Link\n              style={{ flex: 1, textDecoration: \"none\", color: \"black\" }}\n              to={{ type: ROUTES.TODO, payload: { id: todo.id } }}\n            >\n              {todo.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ) : null;\n};\n\nconst makeMapStateToProps = (_, props) => {\n  const getSelectedTodos = makeGetSelectedTodos(props.isChecked);\n\n  return (state, props) => ({\n    todos: getSelectedTodos(state, props)\n  });\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  todosUpdateReq: (id, data) => dispatch(todosUpdateReq(id, data)),\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(TodoList);\n","import { connect } from \"react-redux\";\nimport { getIsLoading } from \"../selectors\";\nimport Loader from \"./Loader\";\nimport SelectUser from \"./SelectUser\";\nimport TodoList from \"./TodoList\";\n\nconst Todos = ({ isLoading }) => {\n  return (\n    <section className=\"container\">\n      {(isLoading) && <Loader />}\n      <h1>Todos</h1>\n\n      <SelectUser />\n\n      <div className=\"row\">\n        <div className=\"col-md-6 mb-4\">\n          <TodoList isChecked={false} title=\"Incomplete Todos\" />\n        </div>\n        <div className=\"col-md-6\">\n          <TodoList isChecked={true} title=\"Completed Todos\" />\n        </div>\n      </div>\n\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getIsLoading(state)\n});\n\nexport default connect(mapStateToProps)(Todos);\n","import { ROUTES } from \"../constants\";\nimport { NavLink } from \"redux-first-router-link\";\nimport React from 'react';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <NavLink className=\"navbar-brand\" to={{ type: ROUTES.HOME }}>\n          Todo App\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink\n                to={{ type: ROUTES.HOME }}\n                exact={true}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                aria-current=\"page\"\n              >\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                to={{ type: ROUTES.TODOS }}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                aria-current=\"page\"\n              >\n                Todos\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                to={{ type: ROUTES.USERS }}\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                aria-current=\"page\"\n              >\n                Users\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default React.memo(Navbar);\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { todosUpdateReq } from \"../actions\";\nimport Loader from \"./Loader\";\n\nconst Todo = ({\n  id,\n  todo,\n  user,\n  todosUpdateReq,\n  isLoading\n}) => {\n\n  const [todoFormData, setTodoFormData] = useState({\n    title: \"\",\n    completed: false,\n    isUpdated: false,\n  });\n\n  useEffect(() => {\n    if (todo)\n      setTodoFormData({\n        isUpdated: false,\n        title: todo.title,\n        completed: todo.completed,\n      });\n  }, [todo]);\n\n  const handleFormData = (event) => {\n    setTodoFormData({\n      ...todoFormData,\n      isUpdated: true,\n      [event.target.id]:\n        event.target.type === \"checkbox\"\n          ? event.target.checked\n          : event.target.value,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    todosUpdateReq(id, {\n      title: todoFormData.title,\n      completed: todoFormData.completed,\n    });\n  };\n\n  return (\n    <section className=\"container\">\n      {isLoading && <Loader />}\n      <h1 className=\"text-center\">Update Todo</h1>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"mb-3\">\n          <input\n            onChange={handleFormData}\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            id=\"title\"\n            value={\n              todoFormData.isUpdated\n                ? todoFormData.title\n                : todo\n                ? todo.title\n                : \"\"\n            }\n          />\n        </div>\n        <div className=\"mb-3 form-check\">\n          <input\n            onChange={handleFormData}\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"completed\"\n            checked={\n              todoFormData.isUpdated\n                ? todoFormData.completed\n                : todo\n                ? todo.completed\n                : false\n            }\n          />\n          <label className=\"form-check-label\" htmlFor=\"completed\">\n            Completed\n          </label>\n        </div>\n        <div className=\"mb-3\">\n          {user && (\n            <p>\n              Created by <b>{user.name}</b>{\" \"}\n            </p>\n          )}\n        </div>\n        <button type=\"submit\" className=\"btn btn-warning\">\n          Update\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ location, todos, users }) => {\n  const id = location.payload.id;\n  return {\n    isLoading: todos.isLoading || users.isLoading,\n    id: id,\n    todo: todos.data.byId[id],\n    user:\n      users.data.allIds.length && todos.data.allIds.length\n        ? users.data.byId[todos.data.byId[id].userId]\n        : null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  todosUpdateReq: (id, data) => dispatch(todosUpdateReq(id, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","import { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nconst Users = ({ isLoading, users }) => {\n\n  return (\n    <section className=\"container\">\n      {isLoading && <Loader />}\n      <h1>Users</h1>\n\n      <div className=\"user-grid\">\n        {users.allIds.map((id) => (\n          <div key={id} className=\"card text-white bg-dark\">\n            <div className=\"card-header\">@{users.byId[id].username}</div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{users.byId[id].name}</h5>\n              <p className=\"card-text\">{users.byId[id].email}</p>\n              <p className=\"card-text\">{`${users.byId[id].address.street}, ${users.byId[id].address.suite}, ${users.byId[id].address.city} (${users.byId[id].address.zipcode})`}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ users }) => ({\n  isLoading: users.isLoading,\n  users: users.data,\n});\n\nexport default connect(mapStateToProps)(Users);\n","import { connect } from 'react-redux';\nimport Home from './components/Home';\nimport Todos from './components/Todos';\nimport Navbar from './components/Navbar';\nimport Todo from './components/Todo';\nimport Users from './components/Users';\nimport { Fragment } from 'react';\n\nfunction App({ page }) {\n  const components = { Home, Todos, Todo, Users };\n  const Component = components[page];\n\n  return (\n    <Fragment>\n      <Navbar />\n      <Component />\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({page}) => ({page});\n\nexport default connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { connectRoutes } from 'redux-first-router';\nimport { ROUTES } from '../constants';\n\nconst mapRoutes = {\n  [ROUTES.HOME]: '/',\n  [ROUTES.USERS]: '/users',\n  [ROUTES.TODOS]: '/todos',\n  [ROUTES.TODO]: '/todos/:id'\n};\n\nconsole.log(process.env.NODE_ENV);\n\nexport default connectRoutes(mapRoutes, {\n  basename:  process.env.NODE_ENV === 'development' ? '' : 'todo-redux-saga',\n  title: state => `${state.page} | Todo App`\n});","import { ROUTES } from \"../constants\";\n\nconst componenents = {\n  [ROUTES.HOME]: 'Home',\n  [ROUTES.TODOS]: 'Todos',\n  [ROUTES.TODO]: 'Todo',\n  [ROUTES.USERS]: 'Users'\n};\n\nconst pageReducer = (state = 'Home', action = {}) => componenents[action.type] || state;\n\nexport default pageReducer;","import { TODOS } from '../constants';\n\nconst initialState = {\n  isLoading: false,\n  data: { byId: {}, allIds: [] },\n  error: \"\"\n};\n\nconst todosReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case TODOS.UPDATE_REQ:\n    case TODOS.LOAD: return {\n      ...state,\n      isLoading: true,\n      error: \"\"\n    };\n\n    case TODOS.SUCCESS: return {\n      ...state,\n      isLoading: false,\n      data: action.todos,\n      error: \"\"\n    }\n\n    case TODOS.FAIL: return {\n      ...state,\n      isLoading: false,\n      error: action.error\n    }\n\n    case TODOS.UPDATE_RES: return {\n      ...state,\n      isLoading: false,\n      error: \"\",\n      data: { byId: {...state.data.byId, [action.todo.id]: action.todo}, allIds: [...state.data.allIds]}\n    }\n\n    default: return state;\n  }\n}\n\nexport default todosReducer;","import { USERS } from '../constants';\n\nconst initialState = {\n  currentUser: null,\n  isLoading: false,\n  data: { byId: {}, allIds: [] },\n  error: \"\"\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case USERS.LOAD: return {\n      ...state,\n      isLoading: true,\n      error: \"\"\n    };\n\n    case USERS.SUCCESS: return {\n      ...state,\n      currentUser: action.users.allIds[0],\n      isLoading: false,\n      data: action.users,\n      error: \"\"\n    }\n\n    case USERS.FAIL: return {\n      ...state,\n      isLoading: false,\n      error: action.error\n    }\n\n    case USERS.CHANGE_CURRENT_USER: return {\n      ...state,\n      currentUser: parseInt(action.id)\n    }\n\n    default: return state;\n  }\n}\n\nexport default usersReducer;","import { combineReducers } from \"redux\";\nimport connectedRoutes from '../router';\nimport page from './pageReducer';\nimport todos from './todosReducer';\nimport users from './usersReducer';\n\nconst { reducer: location } = connectedRoutes;\n\nexport default combineReducers({page, location, todos, users});","import axios from 'axios';\n\nexport const fetchTodos = async () => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/todos');\n  const dataArray = res.data;\n\n  const todos = { byId: {}, allIds: [] };\n  for(let data of dataArray) {\n    todos.byId[data.id] = data;\n    todos.allIds.push(data.id);\n  }\n  \n  return todos;\n}\n\nexport const fetchUsers = async () => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n  const dataArray = res.data;\n\n  const users = { byId: {}, allIds: [] };\n  for(let data of dataArray) {\n    users.byId[data.id] = data;\n    users.allIds.push(data.id);\n  }\n  \n  return users;\n}\n\nexport const updateTodo = async (id, data) => {\n  const res = await axios.patch(`https://jsonplaceholder.typicode.com/todos/${id}`, data);\n  return res.data;\n}","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { ROUTES, TODOS } from \"../constants\";\nimport { fetchTodos, updateTodo } from '../api';\nimport { todosFail, todosSuccess, todosUpdateRes } from '../actions';\n\nfunction* handleTodos() {\n  try {\n    const todos = yield call(fetchTodos);\n    yield put(todosSuccess(todos));\n  } catch(err) {\n    yield put(todosFail(err.toString()));\n  }\n}\n\nfunction* handleTodoUpdateReq({ id, data }) {\n  try {\n    const todo = yield call(updateTodo, id, data);\n    yield put(todosUpdateRes(todo));\n  } catch(err) {}\n}\n\nfunction* handleTodoUpdateRes() {\n  yield put({type: ROUTES.TODOS});\n}\n\nexport default function* watchTodos() {\n  yield takeEvery(TODOS.LOAD, handleTodos);\n  yield takeEvery(TODOS.UPDATE_REQ, handleTodoUpdateReq);\n  yield takeEvery(TODOS.UPDATE_RES, handleTodoUpdateRes);\n}","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { USERS } from \"../constants\";\nimport { fetchUsers } from '../api';\nimport { usersFail, usersSuccess } from '../actions';\n\nfunction* handleTodos() {\n  try {\n    const users = yield call(fetchUsers);\n    yield put(usersSuccess(users));\n  } catch(err) {\n    yield put(usersFail(err.toString()));\n  }\n}\n\nexport default function* watchTodos() {\n  yield takeEvery(USERS.LOAD, handleTodos);\n}","import { all } from 'redux-saga/effects';\n\nimport watchTodos from './watchTodos';\nimport watchUsers from './watchUsers';\n\nexport default function* rootSaga() {\n  yield all([\n    watchTodos(),\n    watchUsers()\n  ]);\n}","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { todosLoad, usersLoad } from '../actions';\nimport rootReducer from '../reducers';\nimport connectedRoutes from '../router';\nimport rootSaga from '../sagas';\n\nconst { middleware, enhancer } = connectedRoutes;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = applyMiddleware(middleware, sagaMiddleware);\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(enhancer, middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nstore.dispatch(usersLoad());\nstore.dispatch(todosLoad());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}